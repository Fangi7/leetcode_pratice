
###[python]

class Solution:
    def twoSum(self, nums: List[int], target: int) -> List[int]:
        toIndex = {} #dic
        for i in range(len(nums)):
            if target - nums[i] in toIndex:
                return [toIndex[target - nums[i]],i]
            else:
                toIndex[nums[i]] = i
        return []
       
###[C++]

class Solution {
public:
    vector<int> twoSum(vector<int>& nums, int target) {
        map<int,int> m;
        vector<int> ans;
        for(int i = 0; i < nums.size(); i++){
            //要把判斷是放在前面，避免target - 值 = 值，會造成兩個值都是同一個index
            if(m.count(nums[i])==1 ) {
                ans.push_back(m[nums[i]]);
                ans.push_back(i);
                break;
            }
            m[target-nums[i]] = i;
            
        }
        return ans;
    }
};
