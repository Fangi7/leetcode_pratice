

##[python]: time complexity O(n), space complexity O(n)

class Solution:
    def pivotIndex(self, nums: List[int]) -> int:
        length = len(nums)
        if length <= 1:
            return 0
        lList = []
        rList = []
        for _ in range(length):
            lList.append(0)
            rList.append(0)
        lList[0] = nums[0]
        rList[-1] = nums[-1]
        # for i in range(length):
        #     print(rList[i])
        for idx in range(length-2,-1,-1):
            rList[idx] = nums[idx] + rList[idx+1]
        if rList[1] == 0:
            return 0
        for idx in range(1,length):
            lList[idx] = nums[idx] + lList[idx-1]
            if lList[idx] == rList[idx]:
                return idx
        
        if lList[-2] == 0:
            return length-1
        return -1
       
